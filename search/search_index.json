{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy the website in github pages Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home page"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy the website in github pages","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"development/dev/","text":"","title":"Workflow de dev"},{"location":"development/env/","text":"Ambiente de desenvolvimento \u00b6 Siga o tutorial do seu sistema operacional (OS), mas para entender melhor como ser um bom desenvolvedor, leia e veja todos os tutoriais. Windows \u00b6 Para windows, lembre-se que voc\u00ea sempre vai acabar tendo que usar o kernel do linux e ent\u00e3o vamos ter que usar WSL (Windows subsystem for linux). Habilitar o modo de desenvolvedor Habilitar o Hyper V para usar Docker (mais para o final do projeto quando j\u00e1 estivermos com a base de dados concreta) Baixar o terminal do Windows (na Microsoft Store, vers\u00e3o produ\u00e7\u00e3o - n\u00e3o preview) Baixar a toolbox da JetBrains para instalar IDEs Baixar o VS Code Instalar WSL (vers\u00e3o 2.0) Instalar Ubuntu 20.04 como distribui\u00e7\u00e3o linux Instalar os pacotes b\u00e1sicos de dev na WSL Instalar asdf (no linux) para versionamento de linguagens de programa\u00e7\u00e3o Instalar PostgreSQL 12 Tutoriais sobre poss\u00edveis configura\u00e7\u00f5es \u00b6 How to set up windows dev env My Development Environment Set up on Windows to use Python for Web Dev & Data Science A beginners guide to setting up a modern web development environment on Windows 10 MacOS \u00b6 N\u00e3o ser\u00e1 usado. Linux \u00b6 Claramente existem diversas distros GNU/Linux. Por isso, na Code & Coffee 55 o padr\u00e3o \u00e9 usar Ubuntu . Isso se deve ao fato de ser a distro mais usada, mais f\u00e1cil de colocar em uso e tamb\u00e9m de facilitar o setup dos usu\u00e1rios de Windows da Code & Coffee 55 com WSL. A vers\u00e3o usada \u00e9 sempre a \u00faltima vers\u00e3o LTS (Long Term Support) . Instalar os pacotes b\u00e1sicos de desenvolvimento em linux Instalar docker (mais para o final do projeto quando j\u00e1 estivermos com a base de dados concreta) Baixar a toolbox da JetBrains para instalar IDEs Baixar o VS Code Instalar asdf (no linux) para versionamento de linguagens de programa\u00e7\u00e3o Instalar PostgreSQL 12 Tutoriais sobre possiveis configura\u00e7\u00f5es \u00b6 O Guia DEFINITIVO de UBUNTU para Devs Iniciantes 23 Best Things To Do After Installing Ubuntu","title":"Setup do dev env"},{"location":"development/env/#ambiente-de-desenvolvimento","text":"Siga o tutorial do seu sistema operacional (OS), mas para entender melhor como ser um bom desenvolvedor, leia e veja todos os tutoriais.","title":"Ambiente de desenvolvimento"},{"location":"development/env/#windows","text":"Para windows, lembre-se que voc\u00ea sempre vai acabar tendo que usar o kernel do linux e ent\u00e3o vamos ter que usar WSL (Windows subsystem for linux). Habilitar o modo de desenvolvedor Habilitar o Hyper V para usar Docker (mais para o final do projeto quando j\u00e1 estivermos com a base de dados concreta) Baixar o terminal do Windows (na Microsoft Store, vers\u00e3o produ\u00e7\u00e3o - n\u00e3o preview) Baixar a toolbox da JetBrains para instalar IDEs Baixar o VS Code Instalar WSL (vers\u00e3o 2.0) Instalar Ubuntu 20.04 como distribui\u00e7\u00e3o linux Instalar os pacotes b\u00e1sicos de dev na WSL Instalar asdf (no linux) para versionamento de linguagens de programa\u00e7\u00e3o Instalar PostgreSQL 12","title":"Windows"},{"location":"development/env/#tutoriais-sobre-possiveis-configuracoes","text":"How to set up windows dev env My Development Environment Set up on Windows to use Python for Web Dev & Data Science A beginners guide to setting up a modern web development environment on Windows 10","title":"Tutoriais sobre poss\u00edveis configura\u00e7\u00f5es"},{"location":"development/env/#macos","text":"N\u00e3o ser\u00e1 usado.","title":"MacOS"},{"location":"development/env/#linux","text":"Claramente existem diversas distros GNU/Linux. Por isso, na Code & Coffee 55 o padr\u00e3o \u00e9 usar Ubuntu . Isso se deve ao fato de ser a distro mais usada, mais f\u00e1cil de colocar em uso e tamb\u00e9m de facilitar o setup dos usu\u00e1rios de Windows da Code & Coffee 55 com WSL. A vers\u00e3o usada \u00e9 sempre a \u00faltima vers\u00e3o LTS (Long Term Support) . Instalar os pacotes b\u00e1sicos de desenvolvimento em linux Instalar docker (mais para o final do projeto quando j\u00e1 estivermos com a base de dados concreta) Baixar a toolbox da JetBrains para instalar IDEs Baixar o VS Code Instalar asdf (no linux) para versionamento de linguagens de programa\u00e7\u00e3o Instalar PostgreSQL 12","title":"Linux"},{"location":"development/env/#tutoriais-sobre-possiveis-configuracoes_1","text":"O Guia DEFINITIVO de UBUNTU para Devs Iniciantes 23 Best Things To Do After Installing Ubuntu","title":"Tutoriais sobre possiveis configura\u00e7\u00f5es"},{"location":"development/tools/","text":"Ferramentas de dev para o projeto Hollow \u00b6 Merge de todo o trabalho dos desenvolvedores \u00b6 O merge de todo o c\u00f3digo \u00e9 feito no GitHub nos projetos chamados hollow-website e hollow-docs . GitHub \u00e9 uma ferramenta muito \u00fatil para compartilhar o trabalho de diferentes desenvolvedores. Para come\u00e7ar a trabalhar com GitHub e entender como funciona, consulte os v\u00e1rios Guias GitHub dispon\u00edveis online, veja v\u00eddeos sobre gitflow workflow , o qual ser\u00e1 usado aqui e consulte as cheatsheets dispon\u00edveis (basta pesquisar por git ). E finalmente, e talvez o mais importante \u00e9 mencionar que usamos o GitFlow WorkFlow. Isso quer dizer que, sempre iremos ter as seguintes branchs ativas : master : usada somente para tags e deploys production : usada para staging e testes de deploys develop : usada para desenvolvimento global (com a modifica\u00e7\u00e3o de todos os devs) dev/{user}/feature-to-be-created : usada para criar uma nova feature ou fun\u00e7\u00e3o ao reposit\u00f3rio. Aten\u00e7\u00e3o: em user , colocar seu nome de usu\u00e1rio ( username ) do GitHub. hotfix : Branch para lidar com um bug ou algo que n\u00e3o funciona como previsto na release. release/{version} : Branch para release na qual n\u00e3o ser\u00e1 adicionado mais funcionalidades, somente corre\u00e7\u00e3o de bugs entre outros. (com a vers\u00e3o que ser\u00e1 proposta) Para mais informa\u00e7\u00f5es, por favor, olhar esses arquivos externos: Como funciona o workflow Video - Git Flow IDE padr\u00e3o para desenvolver em localhost \u00b6 Usar PyCharm Profissional que \u00e9 uma IDE Python muito funcional, ergon\u00f4mica e pr\u00e1tica; especialmente quando se trabalha com GitHub. Para come\u00e7ar com PyCharm voc\u00ea pode visitar a documenta\u00e7\u00e3o dedicada . Recomendamos o uso da Toolbox da Jetbrains para gerenciamento das vers\u00f5es do PyCharm e de outras IDEs que possam vir a usar nos pr\u00f3ximos projetos. Voc\u00ea pode atualizar o projeto simplesmente clicando neste bot\u00e3o, o que deve ser feito antes de dar push em branch local (atualiza\u00e7\u00e3o com rebase da branch develop ) ou criar novo pull request para evitar merge conflict : E fa\u00e7a um pull request, indo para VCS/Git/Pull Request:","title":"Ferramentas de desenvolvimento"},{"location":"development/tools/#ferramentas-de-dev-para-o-projeto-hollow","text":"","title":"Ferramentas de dev para o projeto Hollow"},{"location":"development/tools/#merge-de-todo-o-trabalho-dos-desenvolvedores","text":"O merge de todo o c\u00f3digo \u00e9 feito no GitHub nos projetos chamados hollow-website e hollow-docs . GitHub \u00e9 uma ferramenta muito \u00fatil para compartilhar o trabalho de diferentes desenvolvedores. Para come\u00e7ar a trabalhar com GitHub e entender como funciona, consulte os v\u00e1rios Guias GitHub dispon\u00edveis online, veja v\u00eddeos sobre gitflow workflow , o qual ser\u00e1 usado aqui e consulte as cheatsheets dispon\u00edveis (basta pesquisar por git ). E finalmente, e talvez o mais importante \u00e9 mencionar que usamos o GitFlow WorkFlow. Isso quer dizer que, sempre iremos ter as seguintes branchs ativas : master : usada somente para tags e deploys production : usada para staging e testes de deploys develop : usada para desenvolvimento global (com a modifica\u00e7\u00e3o de todos os devs) dev/{user}/feature-to-be-created : usada para criar uma nova feature ou fun\u00e7\u00e3o ao reposit\u00f3rio. Aten\u00e7\u00e3o: em user , colocar seu nome de usu\u00e1rio ( username ) do GitHub. hotfix : Branch para lidar com um bug ou algo que n\u00e3o funciona como previsto na release. release/{version} : Branch para release na qual n\u00e3o ser\u00e1 adicionado mais funcionalidades, somente corre\u00e7\u00e3o de bugs entre outros. (com a vers\u00e3o que ser\u00e1 proposta) Para mais informa\u00e7\u00f5es, por favor, olhar esses arquivos externos: Como funciona o workflow Video - Git Flow","title":"Merge de todo o trabalho dos desenvolvedores"},{"location":"development/tools/#ide-padrao-para-desenvolver-em-localhost","text":"Usar PyCharm Profissional que \u00e9 uma IDE Python muito funcional, ergon\u00f4mica e pr\u00e1tica; especialmente quando se trabalha com GitHub. Para come\u00e7ar com PyCharm voc\u00ea pode visitar a documenta\u00e7\u00e3o dedicada . Recomendamos o uso da Toolbox da Jetbrains para gerenciamento das vers\u00f5es do PyCharm e de outras IDEs que possam vir a usar nos pr\u00f3ximos projetos. Voc\u00ea pode atualizar o projeto simplesmente clicando neste bot\u00e3o, o que deve ser feito antes de dar push em branch local (atualiza\u00e7\u00e3o com rebase da branch develop ) ou criar novo pull request para evitar merge conflict : E fa\u00e7a um pull request, indo para VCS/Git/Pull Request:","title":"IDE padr\u00e3o para desenvolver em localhost"}]}